import { useAuthStore } from '@/stores/auth'

// Guard pour les routes prot√©g√©es
export const authGuard = (to, from, next) => {
    const authStore = useAuthStore()

    if (!authStore.isAuthenticated) {
        console.warn('‚ö†Ô∏è [AUTH GUARD] Non authentifi√©, redirection vers /login')
        next({
            name: 'login',
            query: { redirect: to.fullPath }
        })
    } else {
        console.log('‚úÖ [AUTH GUARD] Acc√®s autoris√©')
        next()
    }
}

// Guard pour les routes invit√©s (login/register)
export const guestGuard = (to, from, next) => {
    const authStore = useAuthStore()

    console.log('üë• [GUEST GUARD] Route:', to.path)
    console.log('üîê [GUEST GUARD] isAuthenticated:', authStore.isAuthenticated)

    if (authStore.isAuthenticated) {
        console.log('‚ÑπÔ∏è [GUEST GUARD] D√©j√† connect√©, redirection vers /browse/trending')
        next({ name: 'trending' })
    } else {
        console.log('‚úÖ [GUEST GUARD] Acc√®s autoris√©')
        next()
    }
}

/**
 * Guard pour les routes admin (optionnel)
 */
export const adminGuard = (to, from, next) => {
    const authStore = useAuthStore()

    if (!authStore.isAuthenticated) {
        next({ name: 'login', query: { redirect: to.fullPath } })
    } else if (!authStore.isAdmin) {
        console.warn('‚ö†Ô∏è [ADMIN GUARD] Acc√®s refus√© - r√¥le admin requis')
        next({ name: 'trending' })
    } else {
        next()
    }
}